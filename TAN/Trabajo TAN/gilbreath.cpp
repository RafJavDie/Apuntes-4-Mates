#include <primesieve.hpp>
#include <iostream>
#include <vector>

// Número de pasos máximo
static const long P = pow(10,9);

// Comprueba la conjetura de Gilbreath hasta 10^9
// usando ideas de Odlyzko
int main () {
	// Diagonal 645:
	std::vector<uint64_t> nums 
	{4703,12,0,6,4,2,0,2,0,0,2,2,0,4,2,0,0,2,2,2,0,0,
	0,2,0,0,0,2,0,2,2,2,2,2,0,0,0,2,0,0,0,2,0,2,2,2,2,
	0,0,2,2,0,0,0,0,0,0,2,2,2,2,2,0,0,2,2,0,0,2,0,0,2,
	2,2,0,0,2,0,0,0,2,2,2,2,0,0,2,0,2,0,0,0,0,2,0,0,2,
	0,0,0,2,2,2,2,0,2,2,2,2,0,2,2,2,0,2,2,2,2,2,2,2,0,
	0,2,2,2,2,0,0,2,2,2,2,2,2,2,0,0,0,2,2,0,2,0,2,2,2,
	0,2,0,2,0,0,2,0,0,0,2,0,0,2,2,2,2,2,0,0,0,0,2,2,0,
	0,2,0,2,0,2,2,2,2,0,2,0,2,0,0,0,2,0,2,2,0,0,0,0,2,
	2,2,0,2,0,2,2,2,2,0,0,2,0,2,0,0,2,0,0,0,0,0,0,2,0,
	2,2,2,2,2,2,2,2,0,2,2,0,0,0,2,2,0,0,2,0,0,2,0,2,0,
	0,0,0,2,0,2,2,0,0,2,0,2,2,0,0,2,2,2,0,2,0,2,2,0,2,
	2,0,2,2,2,2,2,2,0,0,2,2,2,0,0,0,2,0,2,0,0,2,2,2,2,
	0,0,2,2,2,0,0,2,2,0,0,0,2,2,2,0,0,0,2,0,2,2,2,0,2,
	0,0,2,0,0,2,0,0,2,0,0,0,2,0,0,2,0,2,0,0,2,0,0,0,2,
	0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,0,
	2,2,2,2,2,0,2,0,0,2,0,0,0,0,2,0,0,2,0,0,0,2,2,2,2,
	2,2,0,2,0,0,0,0,0,2,2,0,2,2,0,2,2,0,2,0,0,2,0,0,0,
	2,2,2,2,0,2,0,0,0,2,2,2,2,2,2,0,2,2,2,2,2,2,0,2,2,
	0,2,2,0,0,0,2,2,0,0,2,0,2,2,0,0,0,0,2,2,0,0,0,2,0,
	0,2,2,0,0,2,0,2,2,0,2,0,0,0,0,0,2,0,2,0,0,0,2,0,2,
	0,2,0,2,0,2,2,2,0,0,2,0,0,0,0,2,0,0,0,0,0,2,0,2,0,
	0,0,0,0,2,2,2,0,2,0,0,2,2,0,2,0,0,0,0,0,0,0,0,2,2,
	2,2,2,2,2,2,0,0,0,2,2,2,0,2,2,0,0,0,2,0,2,2,0,2,2,
	0,2,2,0,2,0,0,2,2,2,2,0,0,0,0,2,0,0,0,2,2,0,2,0,0,
	0,2,0,2,2,2,2,0,2,2,0,2,0,0,0,0,0,0,0,2,2,2,2,0,0,
	0,2,2,0,2,2,0,2,2,0,0,0,1};

uint64_t nexto;
primesieve::iterator it;
it.skipto(4704);
uint64_t tempo;
for (long p = 0; p < P; ++p) {
	nexto = it.next_prime();
	
	for (int i = 0; i < 635; ++i) {
		tempo = abs(nexto-nums[i]);
		nums[i] = nexto;
		nexto = tempo;
	}
	
	// Con un poco de loop unrolling 
	//es más eficiente
	for (int i = 0; i < 634; ++i) {
		tempo = abs(nexto-nums[i]);
		nums[i] = nexto;
		nexto = tempo;
	}
		
	if (nums[634] != 0 && nums[634] != 2) {
		std::cout << "Contraejemplo en Paso"
		<< p << ":" << nums[634] << std::endl;
		return 0;
	}
}
std::cout << "Conjetura cierta hasta " << P << '.' << std::endl;
}
